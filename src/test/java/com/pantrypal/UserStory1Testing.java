package com.pantrypal;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;


import java.io.IOException;
import java.net.URISyntaxException;


public class UserStory1Testing {
    /**
     * Test case to verify the functionality of the parseTitle method in the MockChatGPT class.
     * The test generates a recipe using only chicken and rice and verifies that the parseTitle method
     * returns the expected title "Chicken and Rice Casserole".
     */
    @Test
    public void testParseTitle() {
        MockChatGPT mockChatGPT = new MockChatGPT();
        mockChatGPT.generatedRecipe(300, "Make me a recipe using only: chicken, rice");
        String title = mockChatGPT.parseTitle();
        assertEquals("Chicken and Rice Casserole", title);
    }

    /**
     * Tests the parseRecipeIngredients method of the MockChatGPT class.
     * It generates a recipe using only chicken and rice, and then checks if the parsed ingredients match the expected result.
     */
    @Test
    public void testParseRecipeIngredients() {
        MockChatGPT mockChatGPT = new MockChatGPT();
        mockChatGPT.generatedRecipe(300, "Make me a recipe using only: chicken, rice");
        String ingredients = mockChatGPT.parseRecipeIngredients();
        assertEquals("Ingredients:\n\n- 2 cups cooked rice\n- 2 cups cooked and diced chicken\n- 1 onion, diced\n- 1 bell pepper, diced\n- 1 teaspoon garlic powder\n- 1 teaspoon smoked paprika\n- 1/2 teaspoon ground cumin\n- 2 tablespoons olive oil\n- 1 can of diced tomatoes\n- 1 cup shredded cheese of your choice\n\n", ingredients);
    }

    /**
     * Tests the parseRecipeInstructions method of the MockChatGPT class.
     * Verifies that the instructions generated by the parseRecipeInstructions method match the expected instructions.
     */
    @Test
    public void testParseRecipeInstructions() {
        MockChatGPT mockChatGPT = new MockChatGPT();
        mockChatGPT.generatedRecipe(300, "Make me a recipe using only: chicken, rice");
        String instructions = mockChatGPT.parseRecipeInstructions();
        assertEquals("Instructions:\n\n1. Preheat oven to 375Â°F.\n\n2. Heat olive oil in a large skillet over medium heat. Add the onion and bell pepper. Saute until they start to soften.\n\n3. Add garlic powder, smoked paprika, and cumin. Cook for another minute or two.\n\n4. Add the diced tomatoes and cooked chicken. Simmer for 5-7 minutes.\n\n5. Meanwhile, spread the cooked rice in the bottom of a greased 9x13 inch baking dish", instructions);
    }

    @Test
    void testCreateRecipeObj() throws IOException, InterruptedException, URISyntaxException {
        // Arrange
        String ingredients = "chicken, rice";
        String mealType = "dinner";
        Recipe recipe = new Recipe();

        recipe.setMealType(mealType);

        assertEquals("dinner", recipe.getMealType());

        //TextToRecipe textToRecipe = new TextToRecipe(ingredients, mealType, recipe);

        // Act
        //textToRecipe.createRecipeObj();

        // Assert
        
        
    }
}
